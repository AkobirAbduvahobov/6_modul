// <auto-generated />
using System;
using GameStoreWebApp.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameStoreWebApp.DataAccess.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20240703151524_test2")]
    partial class test2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameStoreWebApp.DataAccess.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameStoreWebApp.DataAccess.Entities.GameGenre", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenre");
                });

            modelBuilder.Entity("GameStoreWebApp.DataAccess.Entities.GamePlatform", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatform");
                });

            modelBuilder.Entity("GameStoreWebApp.DataAccess.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("ParentGenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentGenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6c9b1f19-24da-4653-8120-a01a083815a1"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("f566807e-c22e-45cb-829c-a4619d8f373d"),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("7855a4a4-c723-4321-b9d5-1962d87f1f30"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("472c69f5-31e4-4410-ab64-b44131ada9b0"),
                            Name = "Races"
                        },
                        new
                        {
                            Id = new Guid("b3e759ac-a788-4258-a51d-9e43ac7fd685"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("3d6a33a4-9799-4972-a82e-f4f55172bf9b"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("cfe48cf3-c305-403a-af23-afd0a1b7f581"),
                            Name = "Puzzle & Skill"
                        },
                        new
                        {
                            Id = new Guid("f362ec09-a8bb-47d3-9e32-6607f9e8f54a"),
                            Name = "RTS",
                            ParentGenreId = new Guid("6c9b1f19-24da-4653-8120-a01a083815a1")
                        },
                        new
                        {
                            Id = new Guid("62c07bb9-82c5-432c-a838-7a4a2e080d38"),
                            Name = "TBS",
                            ParentGenreId = new Guid("6c9b1f19-24da-4653-8120-a01a083815a1")
                        },
                        new
                        {
                            Id = new Guid("220f8b1c-a807-4dec-90ed-f5d383a7b87a"),
                            Name = "Rally",
                            ParentGenreId = new Guid("472c69f5-31e4-4410-ab64-b44131ada9b0")
                        },
                        new
                        {
                            Id = new Guid("65057d3c-0320-49cf-b621-368fecfb50bb"),
                            Name = "Arcade",
                            ParentGenreId = new Guid("472c69f5-31e4-4410-ab64-b44131ada9b0")
                        },
                        new
                        {
                            Id = new Guid("59469bfa-fc08-4712-bcac-b6a38da35992"),
                            Name = "Formula",
                            ParentGenreId = new Guid("472c69f5-31e4-4410-ab64-b44131ada9b0")
                        },
                        new
                        {
                            Id = new Guid("b74d5676-a5e3-4a57-a8c6-a124912ad662"),
                            Name = "Off-road",
                            ParentGenreId = new Guid("472c69f5-31e4-4410-ab64-b44131ada9b0")
                        },
                        new
                        {
                            Id = new Guid("65ee3277-b8b6-4145-8600-d98040dc6adb"),
                            Name = "FPS",
                            ParentGenreId = new Guid("b3e759ac-a788-4258-a51d-9e43ac7fd685")
                        },
                        new
                        {
                            Id = new Guid("9c6e6f56-bbe9-4717-92ff-28637e59a79d"),
                            Name = "TPS",
                            ParentGenreId = new Guid("b3e759ac-a788-4258-a51d-9e43ac7fd685")
                        });
                });

            modelBuilder.Entity("GameStoreWebApp.DataAccess.Entities.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc4e8319-8610-482f-9ff1-36a0ae5ca13f"),
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("54f134be-dce5-4857-a305-92bef0a81b3e"),
                            Type = "Browser"
                        },
                        new
                        {
                            Id = new Guid("1e400979-501b-462c-8409-f23c1375a7ed"),
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = new Guid("d33c03a7-f9cf-4a1d-8808-174b56229687"),
                            Type = "Console"
                        });
                });

            modelBuilder.Entity("GameStoreWebApp.DataAccess.Entities.GameGenre", b =>
                {
                    b.HasOne("GameStoreWebApp.DataAccess.Entities.Game", "Game")
                        .WithMany("GameGenres")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStoreWebApp.DataAccess.Entities.Genre", "Genre")
                        .WithMany("GameGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("GameStoreWebApp.DataAccess.Entities.GamePlatform", b =>
                {
                    b.HasOne("GameStoreWebApp.DataAccess.Entities.Game", "Game")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStoreWebApp.DataAccess.Entities.Platform", "Platform")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("GameStoreWebApp.DataAccess.Entities.Genre", b =>
                {
                    b.HasOne("GameStoreWebApp.DataAccess.Entities.Genre", "ParentGenre")
                        .WithMany("SubGenres")
                        .HasForeignKey("ParentGenreId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentGenre");
                });

            modelBuilder.Entity("GameStoreWebApp.DataAccess.Entities.Game", b =>
                {
                    b.Navigation("GameGenres");

                    b.Navigation("GamePlatforms");
                });

            modelBuilder.Entity("GameStoreWebApp.DataAccess.Entities.Genre", b =>
                {
                    b.Navigation("GameGenres");

                    b.Navigation("SubGenres");
                });

            modelBuilder.Entity("GameStoreWebApp.DataAccess.Entities.Platform", b =>
                {
                    b.Navigation("GamePlatforms");
                });
#pragma warning restore 612, 618
        }
    }
}
